version: "3.9"
services:
  jaeger-all-in-one:
    image: jaegertracing/all-in-one
    environment:
      - JAEGER_DISABLED=false
    ports:
      - 16686:16686
      - 6831:6831/udp
      - 14268
      - 14250

  # Zipkin
  # zipkin-all-in-one:
  #   image: openzipkin/zipkin:latest
  #   ports:
  #     - "9411:9411"
  # # Collector
  
  # otel-collector:
  #   image: otel/opentelemetry-collector:latest
  #   command: ["--config=/etc/otel-collector-config.yml", "${OTELCOL_ARGS}"]
  #   volumes:
  #     - ./otel-collector-config.yml:/etc/otel-collector-config.yml
  #   ports:
  #     - "1888:1888"   # pprof extension
  #     - "8888:8888"   # Prometheus metrics exposed by the collector
  #     - "8889:8889"   # Prometheus exporter metrics
  #     - "13133:13133" # health_check extension
  #     - "4317:4317"   # OTLP gRPC receiver
  #     # - "55679:55679" # zpages extension
  #     - "9411"   # Zipkin receiver
  #     - "55679" # zpages extension
  #   depends_on:
  #     - jaeger-all-in-one
  #     - zipkin-all-in-one

  # prometheus:
  #   container_name: prometheus
  #   image: prom/prometheus:latest
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"

  redis:
    image: redislabs/redismod
    ports:
    - 6379:6379
    volumes:
      - redis_data:/data/redis
    restart: always

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-ui
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=admin
      - HTTP_PASSWORD=admin
    ports:
      - 8081:8081
    depends_on:
      - redis  

  rabbit-mq:
    image: rabbitmq:3.8.14-management
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      METRICS_PROMETHEUS: "true"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.50'
          memory: 800M
        reservations:
          cpus: '0.25'
          memory: 800M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 60s 

volumes:
  redis_data:              

#  postgres:
#    container_name: postgres_container
#    image: postgres
#    environment:
#      POSTGRES_USER: ${POSTGRES_USER:-postgres}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
#      PGDATA: /data/postgres
#    volumes:
#       - postgres:/data/postgres
#    ports:
#      - "5432:5432"
#    restart: unless-stopped

#volumes:
#    postgres:    